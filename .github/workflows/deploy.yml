name: Manual Deploy from PR Description

on:
  pull_request:
    branches:
      - master

jobs:
  manual-deploy:
    runs-on: [self-hosted, Linux, X64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET 6 SDK
        run: |
          export DOTNET_ROOT=$HOME/dotnet
          export PATH=$DOTNET_ROOT:$PATH
          mkdir -p "$DOTNET_ROOT"
          wget https://dotnetcli.azureedge.net/dotnet/Sdk/6.0.428/dotnet-sdk-6.0.428-linux-x64.tar.gz -O dotnet-sdk.tar.gz
          tar -zxf dotnet-sdk.tar.gz -C "$DOTNET_ROOT"
          dotnet --version

      - name: Extract project to deploy from PR body
        id: extract_project
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
        run: |
          echo "PR body: $PR_BODY"
          PROJECT=$(echo "$PR_BODY" | grep -i '^/deploy ' | awk '{print $2}' | xargs)
          echo "project=$PROJECT" >> $GITHUB_OUTPUT

      - name: Read deployment paths
        id: read_config
        run: |
          echo "Reading deployment config..."
          DEPLOYMENTS=$(yq '.deployments' .deploy-config.yml | yq 'keys | .[]')
          echo "available=$DEPLOYMENTS" >> $GITHUB_OUTPUT

      - name: Build and Deploy selected project
        run: |
          #!/bin/bash
          set -e

          export DOTNET_ROOT=$HOME/dotnet
          export PATH=$DOTNET_ROOT:$PATH

          PROJECT_NAME="${{ steps.extract_project.outputs.project }}"
          echo "Requested project to deploy: $PROJECT_NAME"

          if [ -z "$PROJECT_NAME" ]; then
            echo "‚ùå No /deploy <project> line found in PR description."
            exit 1
          fi

          DEPLOY_PATH=$(yq ".deployments.\"$PROJECT_NAME\".path" .deploy-config.yml)
          if [ "$DEPLOY_PATH" == "null" ]; then
            echo "‚ùå Project $PROJECT_NAME not found in .deploy-config.yml"
            exit 1
          fi

          csproj_path=$(find "$PROJECT_NAME" -name '*.csproj' | head -n 1)
          if [ -z "$csproj_path" ]; then
            echo "‚ùå No .csproj found in $PROJECT_NAME"
            exit 1
          fi

          echo "‚ñ∂Ô∏è Building $csproj_path..."
          dotnet publish "$csproj_path" -c Release -o out

          echo "üöÄ Deploying to $DEPLOY_PATH"
          mkdir -p "$DEPLOY_PATH"
          cp -r "$PROJECT_NAME/out/"* "$DEPLOY_PATH"